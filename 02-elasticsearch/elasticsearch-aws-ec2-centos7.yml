-   name: Create an ElasticSearch cluster
    hosts: localhost
    connection: localhost
    become: False
    vars:
        key_name: default
        instance_type: t2.large
        group_id: sg-28e61761
        ec2_volume_size: 8
    tasks:
        - name: Launch Cluster - master nodes
          ec2:
            key_name: "{{ key_name }}"
            instance_type: "{{ instance_type }}"
            image: ami-b81dbfc5
            wait: yes
            group_id: "{{group_id}}"
            exact_count: 2
            count_tag:
                role: ElasticSearch-Cluster
                es-role: master
            vpc_subnet_id: subnet-eeb51db4
            assign_public_ip: yes
            instance_tags:
                ansible: yes
                role: ElasticSearch-Cluster
                es-role: master
            region: us-east-1
            volumes:
              - device_name: /dev/sda1
                volume_type: gp2
                volume_size: "{{ ec2_volume_size }}"
                delete_on_termination: yes
          register: master_nodes

        - name: Add master nodes public IPs to ec2hosts group
          add_host: hostname={{ item.public_ip }} groups=ec2hosts
          loop: "{{ master_nodes.instances }}"

        - name: Add master nodes public IPs to ec2hosts_master group
          add_host: hostname={{ item.public_ip }} groups=ec2hosts_master
          loop: "{{ master_nodes.instances }}"
          
        - debug: 
            msg: "Instance {{ item.id }} in state {{item.state}}"
          with_items: "{{ master_nodes.instances }}"          

        - set_fact:
            es_discovery: "{% for arg1 in master_nodes.instances %}  {{arg1.private_dns_name}}:9300 {% if not loop.last %}, {% endif %} {% endfor %} "

        - debug:
            msg: "Discovery {{ es_discovery }}"
            
        - name: Launch Cluster - data nodes
          ec2:
            key_name: "{{ key_name }}"
            instance_type: "{{ instance_type }}"
            image: ami-b81dbfc5
            wait: yes
            group_id: "{{group_id}}"
            exact_count: 1
            count_tag:
                role: ElasticSearch-Cluster
                es-role: data
            vpc_subnet_id: subnet-eeb51db4
            assign_public_ip: yes
            instance_tags:
                ansible: yes
                role: ElasticSearch-Cluster
                es-role: data
            volumes:
              - device_name: /dev/sda1
                volume_type: gp2
                volume_size: "{{ ec2_volume_size }}"
                delete_on_termination: yes
            region: us-east-1
          register: data_nodes

        - name: Add data nodes public IPs to host group
          add_host: hostname={{ item.public_ip }} groups=ec2hosts
          loop: "{{ data_nodes.instances }}"

        - name: Add data nodes public IPs to ec2hosts_data group
          add_host: hostname={{ item.public_ip }} groups=ec2hosts_data
          loop: "{{ data_nodes.instances }}"
          
        - debug: 
            msg: "Instance {{ item.id }} in state {{item.state}}"
          with_items: "{{ data_nodes.instances }}"          
          
- name: Wait for cluster
  hosts: ec2hosts
  user: centos
  gather_facts: false
  tasks:
    - wait_for_connection:
        delay: 20
        sleep: 5

        
- name: Configuration play
  gather_facts: true
  hosts: ec2hosts
  user: centos
  vars:
    ntp_timezone: America/New_York
  roles:
    - name: geerlingguy.ntp
      become: yes
  # tasks:
  #  - name: Check NTP service
  #    service: name=ntpd state=started
      
  
- name: Install ElasticSearch on Master nodes
  hosts: ec2hosts_master
  user: centos
  become: yes
  roles:
    - {role: elastic.elasticsearch, es_instance_name: "node1", es_heap_size: "1g",
        es_config: {
            cluster.name: "dwdii-cluster",
            discovery.zen.ping.unicast.hosts: "{{ es_discovery }}",
            http.port: 9200,
            transport.tcp.port: 9300,
            node.data: false,
            node.master: true,
            bootstrap.memory_lock: false,
            }
        }
  vars:
    es_scripts: false
    es_templates: false
    es_version_lock: false
    es_java_install: true
    #ansible_user: ansible
    es_plugins:
      - plugins: ingest-geoip
        
- name: Install ElasticSearch on Data nodes
  hosts: ec2hosts_data
  roles:
    - { role: elastic.elasticsearch, es_instance_name: "node2", 
    es_config: {
        cluster.name: "dwdii-cluster",
        discovery.zen.ping.unicast.hosts: "{{ es_discovery }}",
        http.port: 9201,
        transport.tcp.port: 9301,
        node.data: true,
        node.master: false,
        bootstrap.memory_lock: false,
        } 
    }
  vars:
    es_scripts: false
    es_templates: false
    es_version_lock: false
    es_java_install: true
    es_api_port: 9201
    #ansible_user: ansible
    es_plugins:
    - plugin: ingest-geoip        